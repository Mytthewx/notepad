import io.franzbecker.gradle.lombok.task.DelombokTask

buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "io.franzbecker:gradle-lombok:4.0.0"
	}
}

plugins {
	id 'java'
	id 'jacoco'
	id "de.jansauer.printcoverage" version "2.0.0"
}

apply plugin: 'application'
apply plugin: 'io.franzbecker.gradle-lombok'

repositories {
	mavenCentral()
}

dependencies {
	implementation group: 'com.google.guava', name: 'guava', version: '20.0'
	implementation group: 'org.json', name: 'json', version: '20200518'
	compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
	annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.1.2'

	testImplementation group: 'org.json', name: 'json', version: '20200518'
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.5.13'
	testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
	testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.2'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.2'
	testImplementation group: 'junit', name: 'junit', version: '4.13'
	testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
}

jar {
	manifest {
		attributes(
				'Main-Class': 'eu.mytthew.notepad.Main'
		)
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestCoverageVerification, printCoverage
}

jacocoTestReport {
	reports.xml.enabled true
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['eu/mytthew/notepad/Main*', 'eu/mytthew/notepad/auth/FileOperation*', 'eu/mytthew/notepad/MenuItem*'])
		}))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'CLASS'
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 1.0
			}
			excludes = ['eu.mytthew.notepad.Main*', 'eu.mytthew.notepad.auth.FileOperation*', 'eu.mytthew.notepad.MenuItem*']
		}
	}
}

task delombok(type: DelombokTask, dependsOn: compileJava) {
	ext.outputDir = file("$buildDir/delombok")
	outputs.dir(outputDir)
	sourceSets.main.java.srcDirs.each {
		inputs.dir(it)
		args(it, "-d", outputDir)
	}
	doFirst {
		outputDir.deleteDir()
	}
}

mainClassName = 'eu.mytthew.notepad.Main'
